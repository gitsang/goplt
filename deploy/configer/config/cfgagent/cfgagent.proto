syntax = "proto3";

option go_package = ".;CfgAgent";

package CfgAgent;

service CfgAgent {
  rpc GetCfg(GetCfgReq) returns (GetCfgResp) {}
  rpc WatchCfg(GetCfgReq) returns (stream  GetCfgResp) {}
  rpc ApplyCfg(ApplyCfgReq) returns (ApplyCfgResp){}
}

message CfgError {
  enum ECode {
    E_OK = 0;
    E_INVALID_PARAMETER = 752101; //传参错误
    E_INNER_TIMEOUT = 752102; //内部超时
    E_INNER_ERR = 752103; //内部错误
    E_INVALID_DELETE = 752104;  // 被删除了
    E_INVALID_NOT_FIND = 752105;  // 没有找到
  }
  ECode code = 1;
  string str = 2;
}

message GetCfgReq {
  string app = 1;
  string namespace = 2; // default
}

message KeyValue {
  string key = 1;
  string value = 2;
}

message GetCfgResp {
  string version = 1;
  repeated KeyValue kv = 2;
  CfgError err = 3;
}

message ApplyCfgReq {
  string app = 1;
  string hostname = 2;
  string namespace = 3;
  string version = 4;
}

message ApplyCfgResp {
  CfgError err =1;
}